{"ast":null,"code":"var _jsxFileName = \"/home/workspace/src/components/GameQuestionLogic.jsx\";\nimport React, { Component } from 'react';\nimport GameResults from './GameResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameQuestionLogic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateQuestion = () => {\n      this.xValue = Math.floor(Math.random() * 100);\n      this.yValue = Math.floor(Math.random() * 100);\n      this.zValue = Math.floor(Math.random() * 100);\n      this.suggestedAnswer = Math.floor(Math.random() * 3) + this.xValue + this.yValue + this.zValue;\n      console.log('Gen Question', `x: ${this.xValue}, y: ${this.yValue}, z: ${this.zValue}, ans: ${this.suggestedAnswer}`); //return '';\n    };\n\n    this.markQuestionForAnswer = () => {};\n\n    this.xValue = 0;\n    this.yValue = 0;\n    this.zValue = 0;\n    this.suggestedAnswer = 0;\n    this.questionsCount = 0;\n    this.correctAnswersCount = 0; // run the function on app load\n\n    this.generateQuestion();\n    this.state = {\n      x: this.xValue,\n      y: this.yValue,\n      z: this.zValue,\n      sugAnswer: this.suggestedAnswer\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mental Math\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equation\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: `${this.state.x} + ${this.state.y} + ${this.state.z} = ${this.state.sugAnswer}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"True\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: /*#__PURE__*/_jsxDEV(GameResults, {\n          correctAnswersCount: this.state.answerCount,\n          questionsCount: this.state.questioncount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GameQuestionLogic;","map":{"version":3,"sources":["/home/workspace/src/components/GameQuestionLogic.jsx"],"names":["React","Component","GameResults","GameQuestionLogic","constructor","props","generateQuestion","xValue","Math","floor","random","yValue","zValue","suggestedAnswer","console","log","markQuestionForAnswer","questionsCount","correctAnswersCount","state","x","y","z","sugAnswer","render","answerCount","questioncount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,iBAAN,SAAgCF,SAAhC,CAA0C;AACxCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAqBlBC,gBArBkB,GAqBC,MAAM;AACvB,WAAKC,MAAL,GAAcC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,WAAKC,MAAL,GAAcH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,WAAKE,MAAL,GAAcJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,WAAKG,eAAL,GAAuBL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,KAAKH,MAArC,GAA8C,KAAKI,MAAnD,GAA4D,KAAKC,MAAxF;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA6B,MAAK,KAAKR,MAAO,QAAO,KAAKI,MAAO,QAAO,KAAKC,MAAO,UAAS,KAAKC,eAAgB,EAAlH,EANuB,CAOvB;AACD,KA7BiB;;AAAA,SA+BlBG,qBA/BkB,GA+BM,MAAK,CAAE,CA/Bb;;AAGhB,SAAKT,MAAL,GAAc,CAAd;AACA,SAAKI,MAAL,GAAc,CAAd;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKI,cAAL,GAAsB,CAAtB;AACA,SAAKC,mBAAL,GAA2B,CAA3B,CARgB,CAUhB;;AACA,SAAKZ,gBAAL;AAEA,SAAKa,KAAL,GAAa;AACXC,MAAAA,CAAC,EAAE,KAAKb,MADG;AAEXc,MAAAA,CAAC,EAAE,KAAKV,MAFG;AAGXW,MAAAA,CAAC,EAAE,KAAKV,MAHG;AAIXW,MAAAA,SAAS,EAAE,KAAKV;AAJL,KAAb;AAMD;;AAcDW,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAsB,GAAE,KAAKL,KAAL,CAAWC,CAAE,MAAK,KAAKD,KAAL,CAAWE,CAAE,MAAK,KAAKF,KAAL,CAAWG,CAAE,MAAK,KAAKH,KAAL,CAAWI,SAAU;AAAnG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,mBAAmB,EAAE,KAAKJ,KAAL,CAAWM,WADlC;AAEE,UAAA,cAAc,EAAE,KAAKN,KAAL,CAAWO;AAF7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAnDuC;;AAsD1C,eAAevB,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport GameResults from './GameResults';\n\nclass GameQuestionLogic extends Component {\n  constructor(props){\n    super(props);\n    \n    this.xValue = 0;\n    this.yValue = 0;\n    this.zValue = 0;\n    this.suggestedAnswer = 0;\n    this.questionsCount = 0;\n    this.correctAnswersCount = 0;\n    \n    // run the function on app load\n    this.generateQuestion();\n    \n    this.state = {\n      x: this.xValue,\n      y: this.yValue,\n      z: this.zValue,\n      sugAnswer: this.suggestedAnswer,\n    }\n  }\n  \n  generateQuestion = () => {\n    this.xValue = Math.floor(Math.random() * 100);\n    this.yValue = Math.floor(Math.random() * 100);\n    this.zValue = Math.floor(Math.random() * 100);\n    this.suggestedAnswer = Math.floor(Math.random() * 3) + this.xValue + this.yValue + this.zValue;\n    \n    console.log('Gen Question', `x: ${this.xValue}, y: ${this.yValue}, z: ${this.zValue}, ans: ${this.suggestedAnswer}`);\n    //return '';\n  }\n  \n  markQuestionForAnswer = () =>{}\n  \n  render(){\n    return(\n      <div className=\"game\">\n          <h2>Mental Math</h2>\n          <div className=\"equation\">\n            <p className=\"text\">{`${this.state.x} + ${this.state.y} + ${this.state.z} = ${this.state.sugAnswer}`}</p>\n          </div>\n          <button>True</button>\n          <button>False</button>\n          <p className=\"text\">\n            <GameResults \n              correctAnswersCount={this.state.answerCount}\n              questionsCount={this.state.questioncount}\n            />\n          </p>\n      </div>\n    )\n  }\n}\n\nexport default GameQuestionLogic;"]},"metadata":{},"sourceType":"module"}